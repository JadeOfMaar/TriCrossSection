PART
{
	name = TriDecoupler
	module = Part
	author = Starlord Kerman
	MODEL
	{
		model = TriCrossSection/Parts/TriDecoupler/TriDecoupler
	}
	rescaleFactor = 1.0
	node_stack_top = 0.0, 0.05, 0.0, 0.0, 1.0, 0.0, 3
	node_stack_bottom = 0.0, -0.05, 0.0, 0.0, -1.0, 0.0, 3
	TechRequired = precisionEngineering
	entryCost = 1200
	cost = 300
	category = Coupling
	subcategory = 0
	title = #LOC_FBSS_Dec-title
	manufacturer = 	#LOC_FBSS_agent
	description = #LOC_FBSS_Dec-desc
	attachRules = 1,0,1,1,0
	mass = 0.01
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 40
	breakingForce = 450
	breakingTorque = 450
	maxTemp = 2000 // = 3000
	fuelCrossFeed = True
	stageOffset = 1
	childStageOffset = 1
	bulkheadProfiles = size0
	tags = #autoLOC_501783   //#autoLOC_501783 = decouple
	fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
	sound_decoupler_fire = decouple	
		
	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 150
		isOmniDecoupler = false
		explosiveNodeID = top		
	}
	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
	}
	MODULE
	{
		name = ModulePartVariants
		primaryColor = #ffffff
		secondaryColor = #000000
		baseDisplayName = #autoLOC_8007122
		baseThemeName = BlackAndWhite
		VARIANT
		{
			name = Black
			displayName = Black
			themeName = Black
			primaryColor = #000000
			secondaryColor = #000000
			TEXTURE
			{
				mainTextureURL = TriCrossSection/Parts/TriDecoupler/TriDecouplerBlack
			}
		}
		VARIANT
		{
			name = Red
			displayName = Red and Black
			themeName = Red
			primaryColor = #ff0000
			secondaryColor = #000000
			TEXTURE
			{
				mainTextureURL = TriCrossSection/Parts/TriDecoupler/TriDecouplerRed
			}
		}
	}
	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}
	
	DRAG_CUBE
	{
		cube = Default, 0.2441,0.7933,1.701, 0.2441,0.791,1.701, 5.765,0.9917,0.1306, 5.765,0.9917,0.1306, 0.3643,0.8636,0.6353, 0.3643,0.6737,1.885, 0,4.88E-07,0, 3.415,0.1,2.5
	}	
}
